# file opened: C:\Users\USER\Documents\Github\Mastermind\mastermind.asm
  1   0000                      DEVICE ZXSPECTRUM48
  2   0000                      org $8000               ; Program starts from $8000 = 32768
  3   8000              ; Project made by Alicia Custodia García, Marie Estelle Melaine Pamen, Rodrigo Sáez Escobar
  4   8000 0E 0F        start:  ld C, %00001111;
  5   8002 3E 01                ld A, 1
  6   8004 D3 FE                out ($FE), A ;Blue border
  7   8006 21 00 58             ld HL, $5800
  8   8009 11 00 03             ld DE, 768
  9   800C 71           loop1:  ld (HL), C ; loop that prints all the screen with blue
 10   800D 23                   inc HL
 11   800E 1B                   dec DE
 12   800F 7A                   ld A, D
 13   8010 B3                   or E
 14   8011 20 F9                jr NZ, loop1 ; end of the loop that prints in blue
 15   8013
 16   8013 06 04                ld B, 4
 17   8015 0E 07                ld C, 7
 18   8017 3E 8D                ld a, %10001101 ; blink property whith cian to the first arrow
 19   8019 CD 6C 85             call PixelYXC ; B=y (0-23), C=x(0-31), A=color(0-15)
 20   801C
 21   801C 06 00                ld B, 0
 22   801E 0E 00                ld C, 0
 23   8020 3E 89                ld a, %10001001 ; blue with blue background to dont show win or loose when restart
 24   8022 CD 6C 85             call PixelYXC ; B=y (0-23), C=x(0-31), A=color(0-15)
 25   8025 0C                   inc C
 26   8026 CD 6C 85             call PixelYXC ; B=y (0-23), C=x(0-31), A=color(0-15)
 27   8029 0C                   inc C
 28   802A CD 6C 85             call PixelYXC ; B=y (0-23), C=x(0-31), A=color(0-15)
 29   802D 0C                   inc C
 30   802E CD 6C 85             call PixelYXC ; B=y (0-23), C=x(0-31), A=color(0-15)
 31   8031
 32   8031 21 0A 58             ld HL, $580A ; Aims to the first square where is going to print "MASTER MIND"
 33   8034 0E 0A                ld C, %00001010
 34   8036 06 0B                ld B,11
 35   8038 71           increment: ld (HL), C
 36   8039 23                   inc HL
 37   803A 10 FC                djnz increment
 38   803C
 39   803C
 40   803C CD CE 84             call print_title ; prints the title of the game
 41   803F CD 1C 83             call print_arrows ; print the line of arrows
 42   8042 CD 3A 85             call print_dots ;prints the line of dots
 43   8045 CD 53 85             call print_xs ; prints the line of xs
 44   8048
 45   8048                      ; end of printing the screen, is ready to start playing
 46   8048
 47   8048                      ;call generate_key
 48   8048
 49   8048
 50   8048 06 06                ld B, 6
 51   804A 0E 07                ld C, 7
 52   804C 3E 8F                ld a, %10001111 ; blue with blue background to dont show win or loose when restart
 53   804E CD 6C 85             call PixelYXC ; B=y (0-23), C=x(0-31), A=color(0-15)
 54   8051
 55   8051 21 C7 58             ld HL, $58C7
 56   8054 FD 21 99 80          ld IY, input ; aims to the input list, where it saves the colors of the actual try
 57   8058 16 00                ld d, 0 ; d acts as a flag. is 0 when no key is pressed and 1 when a key is pressed. makes impossible to press to keys at the same time
 58   805A DD 21 87 80          ld IX, seq ; aims to the list of the usable colors, doesnt use the blue of the background
 59   805E
 60   805E C3 A9 80     pre_b2: jp key_x ; simulates to press 'X'. to force the iniciation of the colors
 61   8061
 62   8061              loop2: ; principal loop that reads the letters (Z, X, C) to control the game ( <-, ->, enter)
 63   8061 01 FE FE             ld bc, $FEFE
 64   8064 ED 78                in a,(c)
 65   8066 E6 1F                and %00011111 ; ignore bits
 66   8068 FE 1F                cp %00011111
 67   806A CA A4 80             jp z, off1 ; goes of if no key is pressed
 68   806D CB 42                bit 0, d
 69   806F C2 61 80             jp nz, loop2 ; if d is 1 it means theres a key pressed
 70   8072 7F                   ld a,a
 71   8073 FE 1B                cp %11011
 72   8075 CA A9 80             jp z, key_x ; detects x key
 73   8078 7F                   ld a,a
 74   8079 FE 1D                cp %11101
 75   807B CA C8 80             jp z, key_z ;  detects z key
 76   807E 7F                   ld a,a
 77   807F FE 17                cp %10111
 78   8081 CA E7 80             jp z, key_ent ;  detects v key
 79   8084 C3 61 80             jp loop2 ; if v is pressed goes back
 80   8087
 81   8087 00 88 8A 8B  seq: db 0, %10001000, %10001010, %10001011, %10001100, %10001101, %10001110, %10001111, 0 ; usable colors, except blue
 81   808B 8C 8D 8E 8F
 81   808F 00
 82   8090 00 88 8A 8B  seqCpy: db 0, %10001000, %10001010, %10001011, %10001100, %10001101, %10001110, %10001111, 0 ; copy to restart the original
 82   8094 8C 8D 8E 8F
 82   8098 00
 83   8099 00 00 00 00  input: db 0, 0, 0, 0, 1 ; colors introduced in the try
 83   809D 01
 84   809E 08 0A 0B 0C  key: db %00001000, %00001010, %00001011, %00001100, 1 ;colors of the key
 84   80A2 01
 85   80A3 00           trys: db 0 ; number of trys done
 86   80A4
 87   80A4              off1: ; changes to 0 when theres no key pressed
 88   80A4 16 00                ld d, 0
 89   80A6 C3 61 80             jp loop2
 90   80A9
 91   80A9              key_x: ;  changes d to 1, meaning theres a key pressed, adds 1 to the sequence to go to the next color if the value is 1 means its beign use so goes to the next one
 92   80A9 16 01                ld d, 1
 93   80AB DD 23                inc IX
 94   80AD DD 7E 00             ld a, (ix)
 95   80B0 FE 00                cp 0
 96   80B2 CA C1 80             jp z, res_x
 97   80B5 DD 7E 00             ld a, (ix)
 98   80B8 FE 01                cp 1
 99   80BA CA A9 80             jp z, key_x ;if finds the value 1 goes to the next color
100   80BD 77                   ld (HL), A
101   80BE C3 61 80             jp loop2
102   80C1              res_x: ; goes back to to the beginning
103   80C1 DD 21 87 80          ld IX, seq
104   80C5 C3 A9 80             jp key_x
105   80C8
106   80C8              key_z: ; same as key_x, but backwards
107   80C8 16 01                ld d, 1
108   80CA DD 2B                dec IX ; resta en vez de sumar
109   80CC DD 7E 00             ld a, (ix)
110   80CF FE 00                cp 0
111   80D1 CA E0 80             jp z, res_z
112   80D4 DD 7E 00             ld a, (ix)
113   80D7 FE 01                cp 1
114   80D9 CA C8 80             jp z, key_z
115   80DC 77                   ld (HL), A
116   80DD C3 61 80             jp loop2
117   80E0              res_z:
118   80E0 DD 21 8F 80          ld IX, seq+8 ; goes back to the color sequence
119   80E4 C3 C8 80             jp key_z
120   80E7
121   80E7              key_ent:
122   80E7 16 01                ld d, 1 ; gives d the value of 1 to express that a key is being pressed
123   80E9 3E 01                ld a, 1
124   80EB DD 77 00             ld (IX), a ; changes the value in sequence to 1 to and the color to the sequence
125   80EE
126   80EE 7E                   ld a, (HL)
127   80EF E6 7F                and %01111111 ; removes the BLINK property
128   80F1 77                   ld (HL), a
129   80F2 FD 77 00             ld (IY), a ; adds the color to the sequence
130   80F5 FD 23                inc IY ; moves to the next value of the sequence
131   80F7
132   80F7 FD 7E 00             ld a, (IY) ; detects if is the end of the sequence, if the value is 1 is the end
133   80FA FE 01                cp 1
134   80FC CA 0B 81             jp z, reset_line ; verifies the attempt
135   80FF
136   80FF C5                   push bc
137   8100 01 40 00             ld bc, $40 ; goes to the next dot
138   8103 09                   add HL, bc
139   8104 C1                   pop bc
140   8105 3E 8F                ld a, %10001111 ; gives the BLINK property to the dot
141   8107 77                   ld (HL), a
142   8108 C3 5E 80             jp pre_b2 ; waits for input
143   810B
144   810B              reset_line:
145   810B C5                   push bc
146   810C F5                   push af
147   810D FD E5                push iy
148   810F CD 8C 81             call comprob2 ; verifies the elemts of the list of input which match the code with out taking in care the position, prints the white X
149   8112 CD 66 81             call comprob ; verifies the elemts of the list of input which match the code taking in care the position, prits the red X
150   8115
151   8115 01 00 01             ld bc, $100 ; aims to the arrow of the column
152   8118 B7 ED 42             sub HL, BC
153   811B 3E 0E                ld a, %00001110 ; takes out the BLINK prperty and change the color to yellow, meaning that column is done
154   811D 77                   ld (HL), a
155   811E
156   811E FD 21 A3 80          ld IY, trys ;
157   8122 FD 34 00             inc (IY) ; adds 1 to the trys
158   8125 FD 7E 00             ld a, (IY)
159   8128 FE 0A                cp 10
160   812A CA 38 82             jp z, loss ; if theres 10 trys starts the loss
161   812D 23                   inc HL
162   812E 23                   inc HL ; aims to the next arrow
163   812F 3E 8D                ld a, %10001101 ; gives it the BLINK property
164   8131 77                   ld (HL), a
165   8132 01 40 00             ld bc, $40 ; aims to the next dot and gives it the blink property
166   8135 09                   add HL, BC
167   8136 3E 8F                ld a, %10001111
168   8138 77                   ld (HL), a
169   8139 C1                   pop bc
170   813A F1                   pop af
171   813B FD E1                pop iy
172   813D CD 43 81             call reset_color ; resets the colors of the sequence
173   8140 C3 5E 80             jp pre_b2 ; waits the input
174   8143
175   8143              reset_color: ;copy the colors from seqCpy to seq, to restart the sequence
176   8143 C5                   push BC
177   8144 DD 21 87 80          ld IX, seq
178   8148 FD 21 90 80          ld IY, seqCpy
179   814C 06 09                ld B, 9
180   814E FD 4E 00     loop_c: ld c, (IY)
181   8151 DD 71 00             ld (IX), c
182   8154 DD 23                inc IX
183   8156 FD 23                inc IY
184   8158 05                   dec B
185   8159 C2 4E 81             jp nz, loop_c
186   815C FD 21 99 80          ld IY, input
187   8160 DD 21 87 80          ld IX, seq
188   8164 C1                   pop BC
189   8165 C9                   ret
190   8166              comprob:  ;compares key and input to know how many red x needs to be printed, the prints it
191   8166 06 04                ld b, 4
192   8168 16 00                ld d, 0
193   816A FD 21 99 80          ld IY, input
194   816E DD 21 9E 80          ld IX, key
195   8172              loop:
196   8172 FD 7E 00             ld a, (IY)
197   8175 DD 4E 00             ld c, (IX)
198   8178 BF B9                cp A, C
199   817A C2 7E 81             jp nz, no_match
200   817D 14                   inc D
201   817E              no_match:
202   817E FD 23                inc IY
203   8180 DD 23                inc IX
204   8182 05                   dec B
205   8183 C2 72 81             jp nz, loop  ;now d have the number of red x
206   8186 CD DB 81             call draw_reds
207   8189 16 01                ld d, 1 ; give the value 1 to d that was the value before
208   818B C9                   ret
209   818C
210   818C              comprob2: ;compares the elements of key and input to know have many white x needs to be printed
211   818C 06 04                ld b, 4
212   818E 16 00                ld d, 0
213   8190 FD 21 99 80          ld IY, input
214   8194              loop2_1:
215   8194 FD 7E 00             ld a, (IY)
216   8197 DD 21 9E 80          ld IX, key
217   819B C5                   push BC
218   819C 06 04                ld B, 4
219   819E              loop2_2:
220   819E DD 4E 00             ld c, (IX)
221   81A1 BF B9                cp A, C
222   81A3 C2 A7 81             jp nz, no_match2
223   81A6 14                   inc D
224   81A7              no_match2:
225   81A7 DD 23                inc IX
226   81A9 05                   dec B
227   81AA C2 9E 81             jp nz, loop2_2
228   81AD FD 23                inc IY
229   81AF C1                   pop BC
230   81B0 05                   dec b
231   81B1 C2 94 81             jp nz, loop2_1 ;now d have the number of white x
232   81B4 CD BA 81             call draw_whites
233   81B7 16 01                ld d, 1 ; give the value 1 to d that was the value before
234   81B9 C9                   ret
235   81BA
236   81BA              draw_whites: ; draw wites just remove the X that left over
237   81BA 44 4D                ld BC, HL
238   81BC E5                   push HL ; saves hl to dont loose it
239   81BD 60 69                ld HL, BC
240   81BF 01 40 01             ld BC, $140
241   81C2 09                   add HL, BC ; aims to the last X in the column
242   81C3 01 40 00             ld BC, $40
243   81C6              loop_d:
244   81C6 7A                   ld A, d
245   81C7 FE 04                cp 4
246   81C9 CA D9 81             jp z, cero ; if d is 4 means it doesnt need to remove any X
247   81CC 3E 49                ld A, %01001001 ; gives Flash property to the one it removes
248   81CE 77                   ld (HL), A
249   81CF B7 ED 42             sub HL, BC
250   81D2 14                   inc D
251   81D3 7A                   ld A, D
252   81D4 FE 04                cp 4
253   81D6 C2 C6 81             jp nz, loop_d
254   81D9 E1           cero:   pop HL
255   81DA C9                   ret
256   81DB
257   81DB              draw_reds: ; prints the red X and goes to the WIN phase if theres 4
258   81DB 44 4D                ld BC, HL
259   81DD E5                   push HL ;saves hl to dont loose it
260   81DE 60 69                ld HL, BC
261   81E0 01 80 00             ld BC, $80
262   81E3 09                   add HL, BC ; aims to the first X of the column
263   81E4 01 40 00             ld BC, $40
264   81E7 5A                   ld E, D
265   81E8              loop_d2:
266   81E8 7A                   ld A, d
267   81E9 FE 00                cp 0 ; if theres 4 red X goes to the win phase directly
268   81EB CA F9 81             jp z, cero2
269   81EE 3E 4A                ld A, %01001010
270   81F0 77                   ld (HL), A ; prints red the X
271   81F1 09                   add HL, BC
272   81F2 15                   dec D
273   81F3 7A                   ld A, D
274   81F4 FE 00                cp 0
275   81F6 C2 E8 81             jp nz, loop_d2
276   81F9 E1           cero2:  pop HL ; gives the original value of HL
277   81FA 7B                   ld A, e
278   81FB FE 04                cp 4
279   81FD CA 01 82             jp z, win ; goes to the win phase
280   8200 C9                   ret
281   8201
282   8201              win: ; prints the victory screen
283   8201 06 00                ld B, 0
284   8203 0E 00                ld C, 0
285   8205 3E 8A                ld a, %10001010
286   8207 CD 6C 85             call PixelYXC ; B=y (0-23), C=x(0-31), A=color
287   820A 0C                   inc C
288   820B CD 6C 85             call PixelYXC ; B=y (0-23), C=x(0-31), A=color
289   820E 0C                   inc C
290   820F CD 6C 85             call PixelYXC ; B=y (0-23), C=x(0-31), A=color
291   8212
292   8212 21 00 40             ld HL, $4000 ;aims at the top left corner
293   8215 E5 DD E1             ld IX, HL
294   8218 01 00 01             ld BC, $100
295   821B CD DE 83             call print_W
296   821E DD E5 E1             ld HL,IX
297   8221 23                   inc HL
298   8222 E5 DD E1             ld IX,HL
299   8225 CD F6 83             call print_i
300   8228 DD E5 E1             ld HL,IX
301   822B 23                   inc HL
302   822C E5 DD E1             ld IX,HL
303   822F CD 14 84             call print_n
304   8232
305   8232 01 FE FE             ld BC, $FEFE
306   8235 C3 7D 82             jp loop_fin ; wait to restart
307   8238
308   8238              loss: ; prints the loss screen
309   8238
310   8238 06 00                ld B, 0
311   823A 0E 00                ld C, 0
312   823C 3E 8A                ld a, %10001010
313   823E CD 6C 85             call PixelYXC ; B=y (0-23), C=x(0-31), A=color(0-15)
314   8241 0C                   inc C
315   8242 CD 6C 85             call PixelYXC ; B=y (0-23), C=x(0-31), A=color(0-15)
316   8245 0C                   inc C
317   8246 CD 6C 85             call PixelYXC ; B=y (0-23), C=x(0-31), A=color(0-15)
318   8249 0C                   inc C
319   824A CD 6C 85             call PixelYXC ; B=y (0-23), C=x(0-31), A=color(0-15)
320   824D
321   824D 21 00 40             ld HL, $4000 ; aims to the top left corner
322   8250 E5 DD E1             ld IX, HL
323   8253 01 00 01             ld BC, $100
324   8256 CD 47 84             call print_L
325   8259 DD E5 E1             ld HL,IX
326   825C 23                   inc HL
327   825D E5 DD E1             ld IX,HL
328   8260 CD 5B 84             call print_o
329   8263 DD E5 E1             ld HL,IX
330   8266 23                   inc HL
331   8267 E5 DD E1             ld IX,HL
332   826A CD B3 84             call print_s
333   826D DD E5 E1             ld HL,IX
334   8270 23                   inc HL
335   8271 E5 DD E1             ld IX,HL
336   8274 CD B3 84             call print_s
337   8277
338   8277 01 FE FE             ld BC, $FEFE
339   827A C3 7D 82             jp loop_fin ; waits for the restart
340   827D
341   827D              loop_fin: ;waits to press v and then restarts the game
342   827D ED 78                in a, (c)
343   827F CB 67                bit 4, A
344   8281 C2 7D 82             jp nz, loop_fin
345   8284 CD 43 81             call reset_color
346   8287 FD 21 A3 80          ld IY, trys ;
347   828B FD 36 00 00          ld (IY),0
348   828F C3 00 80             jp start
349   8292
350   8292 76                   halt
351   8293
352   8293              arrow: ; print the arrow with high definition
353   8293 01 00 01             ld BC, $100
354   8296 3E 18                ld A, %00011000
355   8298 77                   ld (HL), A
356   8299 09                   add HL,BC
357   829A 3E 18                ld A, %00011000
358   829C 77                   ld (HL), A
359   829D 09                   add HL,BC
360   829E 3E 18                ld A, %00011000
361   82A0 77                   ld (HL), A
362   82A1 09                   add HL,BC
363   82A2 3E 99                ld A, %10011001
364   82A4 77                   ld (HL), A
365   82A5 09                   add HL,BC
366   82A6 3E DB                ld A, %11011011
367   82A8 77                   ld (HL), A
368   82A9 09                   add HL,BC
369   82AA 3E 7E                ld A, %01111110
370   82AC 77                   ld (HL), A
371   82AD 09                   add HL,BC
372   82AE 3E 3C                ld A, %00111100
373   82B0 77                   ld (HL), A
374   82B1 09                   add HL,BC
375   82B2 3E 18                ld A, %00011000
376   82B4 77                   ld (HL), A
377   82B5 C9                   ret
378   82B6
379   82B6              xs:  ; prints an X where HL is aiming
380   82B6 01 00 07             ld BC, $700
381   82B9 3E C3                ld A, %11000011
382   82BB 77                   ld (HL), A
383   82BC 09                   add HL,BC
384   82BD 77                   ld (HL), A
385   82BE 3E E7                ld A, %11100111
386   82C0 01 00 06             ld BC, $600
387   82C3 B7 ED 42             sub HL,BC
388   82C6 77                   ld (HL), A
389   82C7 01 00 05             ld BC, $500
390   82CA 09                   add HL,BC
391   82CB 77                   ld (HL), A
392   82CC 3E 7E                ld A, %01111110
393   82CE 01 00 04             ld BC,$400
394   82D1 B7 ED 42             sub HL,BC
395   82D4 77                   ld (HL), A
396   82D5 01 00 03             ld BC,$300
397   82D8 09                   add HL,BC
398   82D9 77                   ld (HL), A
399   82DA 3E 3C                ld A, %00111100
400   82DC 01 00 02             ld BC,$200
401   82DF B7 ED 42             sub HL,BC
402   82E2 77                   ld (HL), A
403   82E3 01 00 01             ld BC,$100
404   82E6 09                   add HL,BC
405   82E7 77                   ld (HL), A
406   82E8 C9                   ret
407   82E9
408   82E9              dot:  ; prints a dot where HL is aiming
409   82E9 01 00 07             ld BC, $700
410   82EC 3E 3C                ld A, %00111100
411   82EE 77                   ld (HL), A
412   82EF 09                   add HL,BC
413   82F0 77                   ld (HL), A
414   82F1 3E 7E                ld A, %01111110
415   82F3 01 00 06             ld BC, $600
416   82F6 B7 ED 42             sub HL,BC
417   82F9 77                   ld (HL), A
418   82FA 01 00 05             ld BC, $500
419   82FD 09                   add HL,BC
420   82FE 77                   ld (HL), A
421   82FF 3E FF                ld A, %11111111
422   8301 01 00 04             ld BC,$400
423   8304 B7 ED 42             sub HL,BC
424   8307 77                   ld (HL), A
425   8308 01 00 03             ld BC,$300
426   830B 09                   add HL,BC
427   830C 77                   ld (HL), A
428   830D 3E FF                ld A, %11111111
429   830F 01 00 02             ld BC,$200
430   8312 B7 ED 42             sub HL,BC
431   8315 77                   ld (HL), A
432   8316 01 00 01             ld BC,$100
433   8319 09                   add HL,BC
434   831A 77                   ld (HL), A
435   831B C9                   ret
436   831C
437   831C              print_arrows: ; prints 10 arrows in alternate squares in a row
438   831C 21 80 40             ld HL, $4080
439   831F 23                   inc HL
440   8320 23                   inc HL
441   8321 23                   inc HL
442   8322 23                   inc HL
443   8323
444   8323 E5 DD E1             ld IX,HL
445   8326 01 02 00             ld BC,2
446   8329 11 0A 00             ld DE,10
447   832C DD 23                inc IX
448   832E DD E5 E1     loop3_1: ld HL,IX
449   8331 09                   add HL,BC
450   8332 E5 DD E1             ld IX,HL
451   8335 CD 93 82             call arrow
452   8338 01 02 00             ld BC,2
453   833B 1B                   dec DE
454   833C 7A                   ld A,D
455   833D B3                   or E
456   833E C2 2E 83             jp nz, loop3_1
457   8341 11 0A 00             ld DE,10
458   8344 C9                   ret
459   8345
460   8345              print_linedots: ; prints a line of dots
461   8345 23                   inc HL
462   8346 23                   inc HL
463   8347 23                   inc HL
464   8348 23                   inc HL
465   8349
466   8349 E5 DD E1             ld IX,HL
467   834C 01 02 00             ld BC,2
468   834F 11 0A 00             ld DE,10
469   8352 DD 23                inc IX
470   8354 DD E5 E1     loop3_2: ld HL,IX
471   8357 09                   add HL,BC
472   8358 E5 DD E1             ld IX,HL
473   835B CD E9 82             call dot
474   835E 01 02 00             ld BC,2
475   8361 1B                   dec DE
476   8362 7A                   ld A,D
477   8363 B3                   or E
478   8364 C2 54 83             jp nz, loop3_2
479   8367 11 0A 00             ld DE,10
480   836A C9                   ret
481   836B
482   836B              print_linexs: ; print the line of xs
483   836B 23                   inc HL
484   836C 23                   inc HL
485   836D 23                   inc HL
486   836E 23                   inc HL
487   836F
488   836F E5 DD E1             ld IX,HL
489   8372 01 02 00             ld BC,2
490   8375 11 0A 00             ld DE,10
491   8378 DD 23                inc IX
492   837A DD E5 E1     loop3_3: ld HL,IX
493   837D 09                   add HL,BC
494   837E E5 DD E1             ld IX,HL
495   8381 CD B6 82             call xs
496   8384 01 02 00             ld BC,2
497   8387 1B                   dec DE
498   8388 7A                   ld A,D
499   8389 B3                   or E
500   838A C2 7A 83             jp nz, loop3_3
501   838D 11 0A 00             ld DE,10
502   8390 C9                   ret
503   8391
504   8391              print_M: ; Draws a "M" where the HL aims
505   8391 3E 63                ld A,%01100011
506   8393 77                   ld (HL),A
507   8394 3E 77                ld A,%01110111
508   8396 09                   add HL,BC
509   8397 77                   ld (HL),A
510   8398 3E 7F                ld A,%01111111
511   839A 09                   add HL,BC
512   839B 77                   ld (HL),A
513   839C 09                   add HL,BC
514   839D 77                   ld (HL),A
515   839E 3E 6B                ld A,%01101011
516   83A0 09                   add HL,BC
517   83A1 77                   ld (HL),A
518   83A2 3E 63                ld A,%01100011
519   83A4 09                   add HL,BC
520   83A5 77                   ld (HL),A
521   83A6 09                   add HL,BC
522   83A7 77                   ld (HL),A
523   83A8 C9                   ret
524   83A9              print_A:
525   83A9 09                   add HL,BC
526   83AA 3E 3C                ld A,%00111100 ; prints A
527   83AC CD 37 85             call print_down
528   83AF 3E 06                ld A,%00000110
529   83B1 CD 37 85             call print_down
530   83B4 3E 3E                ld A,%00111110
531   83B6 CD 37 85             call print_down
532   83B9 3E 66                ld A,%01100110
533   83BB CD 37 85             call print_down
534   83BE 3E 3B                ld A,%00111011
535   83C0 CD 37 85             call print_down
536   83C3 C9                   ret
537   83C4
538   83C4              print_R: ;Prints r
539   83C4 3E D8                ld A,%11011000
540   83C6 CD 37 85             call print_down
541   83C9 3E 6C                ld A,%01101100
542   83CB CD 37 85             call print_down
543   83CE 3E 60                ld A,%01100000
544   83D0 CD 37 85             call print_down
545   83D3 3E 60                ld A,%01100000
546   83D5 CD 37 85             call print_down
547   83D8 3E F0                ld A,%11110000
548   83DA CD 37 85             call print_down
549   83DD C9                   ret
550   83DE
551   83DE              print_W:
552   83DE 3E 63                ld A,%01100011
553   83E0 09                   add HL,BC
554   83E1 77                   ld (HL),A
555   83E2 09                   add HL,BC
556   83E3 77                   ld (HL),A
557   83E4 09                   add HL,BC
558   83E5 77                   ld (HL),A
559   83E6 3E 6B                ld A,%01101011
560   83E8 09                   add HL,BC
561   83E9 77                   ld (HL),A
562   83EA 3E 7F                ld A,%01111111
563   83EC 09                   add HL,BC
564   83ED 77                   ld (HL),A
565   83EE 3E 77                ld A,%01110111
566   83F0 09                   add HL,BC
567   83F1 77                   ld (HL),A
568   83F2 3E 63                ld A,%01100011
569   83F4 77                   ld (HL),A
570   83F5
571   83F5 C9                   ret
572   83F6
573   83F6              print_i: ;
574   83F6 3E 0C                ld A,%00001100 ;
575   83F8 77                   ld (HL),A
576   83F9 3E 00                ld A,%00000000
577   83FB CD 37 85             call print_down
578   83FE 3E 1C                ld A,%00011100
579   8400 CD 37 85             call print_down
580   8403 3E 0C                ld A,%00001100
581   8405 CD 37 85             call print_down
582   8408 CD 37 85             call print_down
583   840B CD 37 85             call print_down
584   840E 3E 1E                ld A,%00011110
585   8410 CD 37 85             call print_down
586   8413 C9                   ret
587   8414
588   8414              print_n:
589   8414 09                   add HL,BC
590   8415 3E 6C                ld A,%01101100
591   8417 CD 37 85             call print_down
592   841A 3E 33                ld A,%00110011
593   841C CD 37 85             call print_down
594   841F CD 37 85             call print_down
595   8422 CD 37 85             call print_down
596   8425 CD 37 85             call print_down
597   8428 C9                   ret
598   8429              print_D:
599   8429 3E 0E                ld A,%00001110
600   842B 77                   ld (HL),A
601   842C 3E 06                ld A,%00000110
602   842E CD 37 85             call print_down
603   8431 3E 3E                ld A,%00111110
604   8433 CD 37 85             call print_down
605   8436 3E 66                ld A,%01100110
606   8438 CD 37 85             call print_down
607   843B CD 37 85             call print_down
608   843E CD 37 85             call print_down
609   8441 3E 3B                ld A,%00111011
610   8443 CD 37 85             call print_down
611   8446 C9                   ret
612   8447
613   8447              print_L:
614   8447 3E 60                ld A,%01100000
615   8449 09                   add HL,BC
616   844A 77                   ld (HL),A
617   844B 09                   add HL,BC
618   844C 77                   ld (HL),A
619   844D 09                   add HL,BC
620   844E 77                   ld (HL),A
621   844F 09                   add HL,BC
622   8450 77                   ld (HL),A
623   8451 09                   add HL,BC
624   8452 77                   ld (HL),A
625   8453 3E 7F                ld A,%01111111
626   8455 09                   add HL,BC
627   8456 77                   ld (HL),A
628   8457 3E 7F                ld A,%01111111
629   8459 77                   ld (HL),A
630   845A C9                   ret
631   845B
632   845B              print_o:
633   845B 3E 00                ld A,%00000000
634   845D CD 37 85             call print_down
635   8460 3E 3E                ld A,%00111110
636   8462 CD 37 85             call print_down
637   8465 3E 63                ld A,%01100011
638   8467 CD 37 85             call print_down
639   846A CD 37 85             call print_down
640   846D CD 37 85             call print_down
641   8470 3E 3E                ld A,%00111110
642   8472 CD 37 85             call print_down
643   8475 C9                   ret
644   8476
645   8476              print_e:
646   8476 09                   add HL,BC
647   8477 3E 3C                ld A,%00111100
648   8479 CD 37 85             call print_down
649   847C 3E 66                ld A,%01100110
650   847E CD 37 85             call print_down
651   8481 3E 7E                ld A,%01111110
652   8483 CD 37 85             call print_down
653   8486 3E 60                ld A,%01100000
654   8488 CD 37 85             call print_down
655   848B 3E 3C                ld A,%00111100
656   848D CD 37 85             call print_down
657   8490 C9                   ret
658   8491
659   8491              print_T:
660   8491 3E 30                ld A,%00110000
661   8493 77                   ld (HL), A
662   8494 3E 30                ld A,%00110000
663   8496 CD 37 85             call print_down
664   8499 3E 7C                ld A,%01111100
665   849B CD 37 85             call print_down
666   849E 3E 30                ld A,%00110000
667   84A0 CD 37 85             call print_down
668   84A3 3E 30                ld A,%00110000
669   84A5 CD 37 85             call print_down
670   84A8 3E 37                ld A,%00110111
671   84AA CD 37 85             call print_down
672   84AD 3E 1E                ld A,%00011110
673   84AF CD 37 85             call print_down
674   84B2 C9                   ret
675   84B3
676   84B3              print_s:
677   84B3 09                   add HL,BC
678   84B4 3E 3E                ld A,%00111110
679   84B6 CD 37 85             call print_down
680   84B9 3E 60                ld A,%01100000
681   84BB CD 37 85             call print_down
682   84BE 3E 3E                ld A,%00111110
683   84C0 CD 37 85             call print_down
684   84C3 3E 03                ld A,%00000011
685   84C5 CD 37 85             call print_down
686   84C8 3E 3E                ld A,%00111110
687   84CA CD 37 85             call print_down
688   84CD C9                   ret
689   84CE
690   84CE              print_title: ; prints the title "MASTER MIND" where HL is aiming
691   84CE 21 0A 40             ld HL, $400A
692   84D1 E5 DD E1             ld IX,HL
693   84D4 01 00 01             ld BC,$100
694   84D7 CD 91 83             call print_M ; prints M
695   84DA DD E5 E1             ld HL,IX
696   84DD 23                   inc HL
697   84DE E5 DD E1             ld IX,HL
698   84E1 CD A9 83             call print_A
699   84E4 DD E5 E1             ld HL,IX
700   84E7 23                   inc HL
701   84E8 E5 DD E1             ld IX,HL
702   84EB CD B3 84             call print_s
703   84EE DD E5 E1             ld HL,IX
704   84F1 23                   inc HL
705   84F2 E5 DD E1             ld IX,HL
706   84F5 CD 91 84             call print_T
707   84F8 DD E5 E1             ld HL,IX
708   84FB 23                   inc HL
709   84FC E5 DD E1             ld IX,HL
710   84FF CD 76 84             call print_e
711   8502 DD E5 E1             ld HL,IX
712   8505 23                   inc HL
713   8506 E5 DD E1             ld IX,HL
714   8509 09                   add HL,BC
715   850A CD C4 83             call print_R
716   850D DD E5 E1             ld HL,IX
717   8510 23                   inc HL
718   8511 23                   inc HL
719   8512 E5 DD E1             ld IX,HL
720   8515 CD 91 83             call print_M
721   8518 DD E5 E1             ld HL,IX
722   851B 23                   inc HL
723   851C E5 DD E1             ld IX,HL
724   851F CD F6 83             call print_i
725   8522 DD E5 E1             ld HL,IX
726   8525 23                   inc HL
727   8526 E5 DD E1             ld IX,HL
728   8529 CD 14 84             call print_n
729   852C DD E5 E1             ld HL,IX
730   852F 23                   inc HL
731   8530 E5 DD E1             ld IX,HL
732   8533 CD 29 84             call print_D
733   8536 C9                   ret
734   8537
735   8537
736   8537 09           print_down: add HL,BC ; adds 1 to HL in a row inside a specific square and assigns the value of A to define his design
737   8538 77                   ld (HL),A
738   8539 C9                   ret
739   853A
740   853A              print_dots:
741   853A 21 C0 40             ld HL, $40C0
742   853D CD 45 83             call print_linedots ; print the line of dots
743   8540 21 00 48             ld HL, $4800
744   8543 CD 45 83             call print_linedots
745   8546 21 40 48             ld HL, $4840
746   8549 CD 45 83             call print_linedots
747   854C 21 80 48             ld HL, $4880
748   854F CD 45 83             call print_linedots
749   8552 C9                   ret
750   8553
751   8553              print_xs:
752   8553 21 00 50             ld HL, $5000
753   8556 CD 6B 83             call print_linexs ; prints the line of xs
754   8559 21 40 50             ld HL, $5040
755   855C CD 6B 83             call print_linexs
756   855F 21 80 50             ld HL, $5080
757   8562 CD 6B 83             call print_linexs
758   8565 21 C0 50             ld HL, $50C0
759   8568 CD 6B 83             call print_linexs
760   856B C9                   ret
761   856C
762   856C
763   856C              PixelYXC: ; B=y (0-23), C=x(0-31), A=color(%COLOR %BACKGROUND)
764   856C                      ;changes the color of the pixel
765   856C F5                   push AF
766   856D D5                   push DE
767   856E E5                   push HL
768   856F
769   856F 26 00                ld h, 0
770   8571 68                   ld l, b
771   8572 29                   add hl, hl ;2*hl
772   8573 29                   add hl, hl
773   8574 29                   add hl, hl
774   8575 29                   add hl, hl
775   8576 29                   add hl, hl ;32*hl would be like y*32
776   8577
777   8577 16 00                ld d, 0
778   8579 59                   ld e, c
779   857A 19                   add hl, de ; HL = 32*y + x
780   857B 11 00 58             ld de, $5800
781   857E 19                   add hl, de ; HL = %5800 + 32*y +x
782   857F
783   857F 77                   ld (hl), a
784   8580
785   8580 E1                   pop HL
786   8581 D1                   pop DE
787   8582 F1                   pop AF
788   8583 C9                   ret
789   8584
790   8584
# file closed: C:\Users\USER\Documents\Github\Mastermind\mastermind.asm
